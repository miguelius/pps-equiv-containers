version: '3'

services:
  db:
    image: postgres:12.5-alpine
    restart: always
    environment:
      ALLOW_IP_RANGE: 0.0.0.0/0
      POSTGRES_PASSWORD: desarrollo
    ports:
      - 5432:5432
    volumes:
      - ./docker/postgres/data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  backend:
    build:
      context: ./backend
      dockerfile: ../docker/node/Dockerfile
    #ports:
    #  - 3001:3001
    environment:
      SQL_HOST: db
      SQL_USERNAME: unahur_desapp
      SQL_PASSWORD: desarrollo
      SQL_DATABASE: equivalencias
    depends_on:
      db:
        condition: service_healthy
#    volumes:
#      - ./PPS-2023c2-Gurpo2-equiv-back/:/app:rw
    healthcheck:
      test: ["CMD-SHELL", "wget http://localhost:3001/api/usuarios"]
      interval: 30s
      timeout: 5s
      retries: 10
  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/node-build-a-nginx/Dockerfile
    depends_on:
      backend:
        condition: service_healthy
    environment:
      REACT_APP_API_URL: /api #http://backend:3001/api
    #volumes:
    #  - ./PPS-2023c2-Gurpo2-equiv-front/:/app:rw
    ports:
      - 3000:80
